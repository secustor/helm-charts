name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

env:
  # renovate: datasource=node-version depName=node
  NODE_VERSION: 22.19.0

jobs:
  discovery:
    name: Discovery
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build matrix from charts/* containing Chart.yaml
        id: set-matrix
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t dirs < <(find charts -mindepth 1 -maxdepth 2 -type f -name Chart.yaml -print0 | xargs -0 -n1 dirname | sort -u)
          json='{"include":['
          first=1
          for d in "${dirs[@]}"; do
            if [[ $first -eq 1 ]]; then first=0; else json+=","; fi
            json+="{\"working-directory\":\"$d\"}"
          done
          json+="]}"
          echo "matrix=$json" >> "$GITHUB_OUTPUT"
          echo "Discovered charts matrix: $json"

  vitest:
    name: Run Vitest
    runs-on: ubuntu-24.04
    needs: discovery
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Install dev dependencies
        run: pnpm install --frozen-lockfile

      - name: Prettier check
        run: pnpm run prettier:check

      - name: Run unit tests (vitest)
        run: pnpm run test

  helm-tests:
    name: Helm Chart Unit Tests
    needs: discovery
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.discovery.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          # renovate: datasource=github-releases depName=helm/helm
          version: v3.18.6

      - name: Install helm-unittest plugin
        run: helm plugin install https://github.com/helm-unittest/helm-unittest

      - name: Run Helm chart unit tests
        working-directory: ${{ matrix.working-directory }}
        run: |
          helm unittest -f "templates/tests/**/*.yaml" .

  gather-results:
    name: Result
    runs-on: ubuntu-latest
    needs:
      - vitest
      - helm-tests
    if: always()
    steps:
      - name: Evaluate job results
        shell: bash
        run: |
          declare -A results
          results[vitest]="${{ needs.vitest.result }}"
          results[helm-tests]="${{ needs.helm-tests.result }}"
          echo "Results: ${results[@]}"
          failed=0
          for k in "${!results[@]}"; do
            v="${results[$k]}"
            echo "$k => $v"
            if [[ "$v" != "success" ]]; then
              failed=1
            fi
          done
          if [[ $failed -ne 0 ]]; then
            echo "One or more jobs failed. Failing gather-results."
            exit 1
          fi
          echo "All jobs succeeded."
