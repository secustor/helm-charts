# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []

# Configurations that are relevant for all the components of the chart
common:
  config:
    # This has only an effect during database initialization
    # pgvector is the default as CloudNativePG supports it out of the box
    vectorExtension: pgvector # or pgvecto.rs
  postgres:
    host: immich-db
    existingSecret:
      enabled: false
      secretName: ""
      usernameKey: username
      passwordKey: password
    createSecret:
      username: ""
      password: ""

  redis:
    host: immich-redis
    existingSecret:
      enabled: false
      secretName: ""
      passwordKey: password
    createSecret:
      password: ""

server:
  # This will set the replicaset count. Ignored if autoscaling is enabled.
  replicaCount: 1
  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}
  podLabels: {}

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  service:
    type: ClusterIP
    port: 2283

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Additional environment variables to set on the container.
  env: []
    # - name: DB_VECTOR_EXTENSION
    #   value: "pgvector"
    # - name: SOME_OTHER_ENV
    #   valueFrom:
    #     secretKeyRef:
    #       name: mySecret
    #       key: secretField

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: uploads
  #   hostPath:
  #     path: /data/upload
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: uploads
  #   mountPath: /usr/src/app/upload

machineLearning:
  enabled: false
  cache:
    enabled: true
    # If enabled the cache will be stored in memory, rather than local disk. This will increase performance but will require more memory.
    useMemory: false
    sizeLimit: 10Gi

  replicaCount: 1

  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  podAnnotations: {}
  podLabels: {}

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  service:
    type: ClusterIP
    port: 3003

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Additional environment variables to set on the container.
  env: []
    # - name: DB_VECTOR_EXTENSION
    #   value: "pgvector"
    # - name: SOME_OTHER_ENV
    #   valueFrom:
    #     secretKeyRef:
    #       name: mySecret
  #       key: secretField

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: uploads
  #   hostPath:
  #     path: /data/upload
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: uploads
  #   mountPath: /usr/src/app/upload

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# This block is for setting up the HTTPROUTE for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/gateway/#api-kind-httproute
httpRoute:
  enabled: false
  hostnames: []
  # - chart-example.local
  parentRefs: []
  # - name: public-web
  #   namespace: ingress
